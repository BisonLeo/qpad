v2
{
 "cells": [
  {
   "m_language": "Markdown",
   "m_text_out": "",
   "m_cell_id": 0,
   "m_has_any_error": 0,
   "m_completion_time": [
    2016,
    1,
    11,
    22,
    42,
    45,
    5
   ],
   "m_button_name": "TODO LIST",
   "in_m_current_wrap_width": 512,
   "in_m_enable_wrapping": 0,
   "out_m_current_wrap_width": 512,
   "out_m_enable_wrapping": 0
  },
  {
   "m_language": "Windows BAT",
   "m_text_out": "s7res.c\r\n   Creating library ./bin/win64/qpad.lib and object ./bin/win64/qpad.exp\r\ncreating FBO: 1920 1017\r\n",
   "m_cell_id": 1,
   "m_completion_time": [
    2017,
    0,
    6,
    0,
    12,
    50,
    6
   ],
   "m_has_any_error": 0,
   "m_current_path": "c:/tp/qpad",
   "m_button_name": "Debug",
   "m_unknown_progress": 0.2935235776647969,
   "m_t_unknown_progress": 15708140497,
   "in_m_current_wrap_width": 512,
   "in_m_enable_wrapping": 0,
   "out_m_current_wrap_width": 512,
   "out_m_enable_wrapping": 0,
   "m_in_budget_ratio": 0.46850590934463726
  },
  {
   "m_language": "Windows BAT",
   "m_text_out": "s7main.c\r\ndmp.c\r\npipe_waiter.c\r\nspaprt_portable.c\r\ns7res.c\r\n   Creating library ./bin/win64_release/qpad.lib and object ./bin/win64_release/qpad.exp\r\ns7main.c\r\ndmp.c\r\npipe_waiter.c\r\ns7res.c\r\n   Creating library ./bin/win32_release/qpad.lib and object ./bin/win32_release/qpad.exp\r\n\r\n7-Zip [64] 15.14 : Copyright (c) 1999-2015 Igor Pavlov : 2015-12-31\r\n\r\nScanning the drive:\r\n1 file, 4897792 bytes (4783 KiB)\r\n\r\nCreating archive: qpad3beta_32.7z\r\n\r\nItems to compress: 1\r\n\r\n\r\nFiles read from disk: 1\r\nArchive size: 1640843 bytes (1603 KiB)\r\nEverything is Ok\r\n\r\n7-Zip [64] 15.14 : Copyright (c) 1999-2015 Igor Pavlov : 2015-12-31\r\n\r\nScanning the drive:\r\n1 file, 5204992 bytes (5083 KiB)\r\n\r\nCreating archive: qpad3beta_64.7z\r\n\r\nItems to compress: 1\r\n\r\n\r\nFiles read from disk: 1\r\nArchive size: 1734304 bytes (1694 KiB)\r\nEverything is Ok\r\n        1 file(s) copied.\r\n",
   "m_cell_id": 2,
   "m_has_any_error": 0,
   "m_current_path": "c:/tp/qpad",
   "m_completion_time": [
    2017,
    0,
    6,
    0,
    16,
    8,
    6
   ],
   "m_button_name": "Release",
   "m_unknown_progress": 0.27189300115874526,
   "m_t_unknown_progress": 16171352666,
   "in_m_current_wrap_width": 512,
   "in_m_enable_wrapping": 0,
   "out_m_current_wrap_width": 512,
   "out_m_enable_wrapping": 0
  },
  {
   "m_language": "Unix Shell Script",
   "m_text_out": "",
   "m_cell_id": 3,
   "m_has_any_error": 0,
   "m_current_path": "c:/tp/qpad",
   "m_completion_time": [
    2016,
    8,
    13,
    17,
    34,
    56,
    3
   ],
   "m_button_name": "Translate",
   "m_unknown_progress": 0.2270804463794893,
   "m_t_unknown_progress": 10629925925,
   "in_m_current_wrap_width": 512,
   "in_m_enable_wrapping": 0,
   "out_m_current_wrap_width": 512,
   "out_m_enable_wrapping": 0
  },
  {
   "m_language": "Markdown",
   "m_cell_id": 4,
   "in_m_current_wrap_width": 512,
   "in_m_enable_wrapping": 0,
   "m_button_name": "â€¢ Search result"
  }
 ],
 "m_last_focus_cell_id": 4
}
=====í¯¿í¿¿=====
# TODO LIST
sticker code:
	(test) per-sticker unique id to avoid order-change troubles
	build the MD notes
	code -> sticker navigation
		mainly the qpad tags
		do it lazily:
			show a "go to sticker" button on that line
				and trigger it on F12
			index the walls when clicked
	connecting the same name in different stickers
	code templates? not sticker's job...
	sticker z-order
	render filename in code stickers? sticker caption bar?
	could store code template / code generator as sticker scripts
(test) auto-reparse on idle?
	and when the parse queue is empty
	the table rebuilds could be expensive
global search highlight clean up
weird error appearance in android build output
	TERM=xterm? no
terminal gets overwhelmed by large amounts of output
	ctrl+s / ctrl+q?
memory leak
build for mac
file view class list
	searchable classes
style enforcement
	potentially per-project
		or per-file with a default
	space rules enforcement
		let the parser decide
		maybe also enforce it in the find bar
iOS bluetooth keyboard support
	- keyCommands
stop / clear buttons in notebook v2
notebook - define per-cell hotkey, hotkey indicator on button
touch: scrolling, touch detection, ac modes, mouse over, typos
	touch-awareness
tab switch
	to previously edited file?
		navigate backward - but it isn't reliable for this
	an option
release on github, again
	linux buildable source .tar.gz
		build-it-yourself release
remove the help system?
	links in help
	running a markdown: open as help page?
code beautifier
AC plugins
	clang
	tex ref
	bash
	js member name in certain strings
	--
	multi-source combination
		some candidates may smash a context
		put this in as a property of the candidates
	HTML tag properties, CSS
	providing explanation in AC sources
put plugins in ~/.qpad
make top hint / notification dodge MouseOver / cursor
swap ctrl+shift+v and ctrl+v?
binary editor reloading?
rendering
	true AA for roundrect
tex
	port more of deferred.qpadscript
	enabling/disabling plugins in menu
CJK PPM:
	work in conjunction with IME?
		could have blind prediction...
	iphone prediction isn't that useful
	--
	or LSTM
binary editor
	duk buffer size limit
notebook cell ops undo/redo
nested directory in the file browser
`#pragma region` folding
a few built-in themes
	~/.qpad_debug/theme_dark1.json
mac
	zoom hotkey
	system menu
Unicode-aware case handling
	we don't want to screw up the case insensitive performance
for non-familiar users:
	more concise system for translation / hotkey scripts
	[ new window ] and [ button: ... ] in help
peek definition:
	CEO and hide cannot overlap
weird bookmark display in tophint
	bad tophint y0 - the hiding mode has changed!
drag-out support
	SDL mouse support is garbage, disable it for now
	propagate unique_id on split
	window-awareness in SetFocus and stuff
	actually dragging things *out*
	upgrading <layout> from old metadata
	flashing / activating the right window
on-boarding:
	Maya-like "highlight new" in menus
explicit diff visualization
	autoedit stuff + diffupdate
[interactive] in windows bat
	fails on Qin Hao's machine
auto-resize tab terminals

=====í¯¿í¿¿=====
@echo off
rem build script for the project
rem [button: Debug]
set LANG=zh_CN.utf8
jc --readable_c_code -awin64 qpad.jc --run

=====í¯¿í¿¿=====
@echo off
rem build script for 'qpad.jc'
rem [button: Release]
cd /d c:/tp/qpad
git log --pretty=format:%%H -n 1 > res/misc/commit.txt
jc -brelease -awin64 qpad.jc
jc -brelease -awin32 qpad.jc
rem jc -brelease -amac qpad.jc
cd bin\win32_release
del qpad3beta_32.7z
7z a qpad3beta_32.7z qpad.exe
cd /d c:\tp\qpad
cd bin\win64_release
del qpad3beta_64.7z
7z a qpad3beta_64.7z qpad.exe
del c:\software\cmder\bin\qpad_old.exe
ren c:\software\cmder\bin\qpad.exe qpad_old.exe
copy qpad.exe c:\software\cmder\bin\qpad.exe

=====í¯¿í¿¿=====
#!/bin/sh
#[button: Translate]
# After this is done, re-run qpad to generate 'translation.json'
cd /c/tp/qpad/res
grep -ERoh text:\(\([\"][^\"]+[\"]\)\|\([\'][^\']+[\']\)\) * > ../build/translation.txt
grep -ERoh UI\._\\\(\(\([\"][^\"]+[\"]\)\|\([\'][^\']+[\']\)\)\\\) * >> ../build/translation.txt
grep -ERoh UI\.Format\\\(\(\([\"][^\"]+[\"]\)\|\([\'][^\']+[\']\)\), * >> ../build/translation.txt
grep -ERoh tooltip:\(\([\"][^\"]+[\"]\)\|\([\'][^\']+[\']\)\) * >> ../build/translation.txt
grep -ERoh ,name:\(\([\"][^\"]+[\"]\)\|\([\'][^\']+[\']\)\) * >> ../build/translation.txt

=====í¯¿í¿¿=====
Search result