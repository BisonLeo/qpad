{
 "cells": [
  {
   "m_language": "Markdown",
   "m_text_in": "# TODO LIST\nqinfo\n\tby-topic qinfo files\n\t\tGL\n\t\tHTML5\n\t\t\tAudio\n\t\t\tthe callback protocols\n\t\t\t\tformulate the callback-setting as qinfo-fn?\n\t\t\t\tor as a template?\n\t\t\t\tco-occuring code\n\t\t\t\t\tAC and maintenance\n\t\t\t\t\tpersistent memory of them\n\t\t\t\t\t\thow do humans do that?\n\tqinfo-in should count as qinfo-vars inside the function in question...\n\tparam briefs\n\t\tif qinfo AC were helpful *at all*, we don't need it\n\tfunction call AC\n\t\tis it useful?\n\tmaybe trigger on idle\n\t\tor change the default tab behavior\n\texample document\n\tkey concepts\n\t\ttemplate: code / asset / manual jobs that contribute to the *code*\n\t\t\ttemplates can have annotations too\n\t\t\t\tspecify parameters and their class requirements\n\t\t\ttemplates can create places\n\t\t\t\te.g. MUnityCharacterBehavior::per_frame_callback\n\t\t\ttemplates can fulfill functionalities\n\t\tplace: a marked code range that can hold annotations\n\t\t\tmember place - objects defined here can be obtained from any object of a specific class\n\t\tfunctionality: a state change / object creation that specifies some human-side goal\n\t\tobject / class: runtime concepts as in their standard meanings\n\t\t\tclass can be additionally annotated with semantical metadata\n\t\t\t\te.g. CImage.int(width)\n\t\t\tmetadata-classes can inherit each other\n\t\t\t\tmeta_class MUnity:MGameEngine\n\t\tstate: a set of assertions optionally attached to an object\n\t\t\te.g.\n\t\t\t\tgame_running\n\t\t\t\ttemp_buf0.holding_vertex_data\n\t\ttools: shell scripts intended for human application\n\t\t\te.g. \"run unity\"\n\tplace requirements\n\t\te.g. GL shaders have to be created during GL initialization\n\t\tcould be expressed by specifying the global state as a parameter requirement\n\tuse it to interpret the modelo frontend?\n\tsurpress common string test in qinfo AC?\nbring function hints / ... near the cursor\ndbl-clicking a partially-out-of-view notebook cell caption\nstyle enforcement\n\tpotentially per-project\ntagged code in md\n\thotkeys for browsing help\n\t\thelp window focus issues in general\n\tbad focus in the help window\n(reproduce?) project-in-unopenable-location crash\niOS bluetooth keyboard support\n\t- keyCommands\ngraph\n\teach tag as a node, with order-aware drag-connecting\n\t\tand maybe a description\n\t\tjust drag the code into the editor window\n\t\t\twith potential positioning hints\n\t\t\t\t(function(){})() indicates init code, etc.\n\t\t\tcarrying a tag\n\t\tcould provide tag-specific completion\n\t\t\tor just modify the code in the doc on the fly based on some more intuitive UI\n\t\t\tor something auto-edit-like\n\t\ttest: game programming course\n\tshow tag-related documentation on F1\n\t----\n\tthe point is the component-based programming\n\t\tvariable meaning list in holder tags\n\t\tvariable-type list\n\t\t\tannotate type with semantics\n\t\t\tuse type as goals and to select actions (APIs)\nstop / clear buttons in notebook v2\nF5/CTRL+F5 indicators\ntouch: scrolling, touch detection, ac modes, mouse over, typos\n\ttouch-awareness\ntab switch\n\tto previously edited file?\n\t\tnavigate backward - but it isn't reliable for this\n\tan option\ndrag-out support\n\tsecondary windows\n\t\trendering works as is\n\t\tregion is mixed up\n\tthe smart rerendering FBO... one FBO for each window? only one FBO for the frontmost?\nrelease on github, again\n\tlinux buildable source .tar.gz\n\t\tbuild-it-yourself release\nremove the help system?\n\tlinks in help\n\trunning a markdown: open as help page?\nruntime completion\n\tPython / node.js\n\tactually run an interpreter session and dump the \"require\"d objects to a file\n\t\tsecurity concerns...\ncode beautifier\n\thelp code / smart paste auto beautification\ndiff to generate undo ops on reload\nAC plugins\n\ttex ref\n\tbash\n\tjs member name in certain strings\n\t--\n\tmulti-source combination\n\t\tsome candidates may smash a context\n\t\tput this in as a property of the candidates\n\tHTML tag properties, CSS\n\tproviding explanation in AC sources\nput plugins in ~/.qpad\nmake top hint / notification dodge MouseOver / cursor\nswap ctrl+shift+v and ctrl+v?\nbinary editor reloading?\nrendering\n\ttrue AA for roundrect\ntex\n\tport more of deferred.qpadscript\n\tenabling/disabling plugins in menu\nCJK PPM:\n\twork in conjunction with IME?\n\t\tcould have blind prediction...\n\tiphone prediction isn't that useful\n\t--\n\tor LSTM\nbinary editor\n\tduk buffer size limit\ndedicated mobile/mobile-like UI / console UI\n\tonly use the typeable part of a keyboard\n\tbuttons for common actions\n\t(maybe) vi-like commands\n\tterminal / mobile keyboard support\n\t\tor just buy a keyboard with Fn keys\nnotebook cell ops undo/redo\nnested directory in the file browser\n`#pragma region` folding\na few built-in themes\n\t~/.qpad_debug/theme_dark1.json\nmac\n\tzoom hotkey\n\tsystem menu\nUnicode-aware case handling\n\twe don't want to screw the case insensitive performance\nfor non-familiar users:\n\tmore concise system for translation / hotkey scripts\n\tdisplay a \"how to replace\" hint when one presses ctrl+r\n\t[ new window ] and [ button: ... ] in help\npeek definition:\n\tCEO and hide cannot overlap\n",
   "m_text_out": "",
   "m_cell_id": 0,
   "m_has_any_error": 0,
   "m_completion_time": [
    2016,
    1,
    11,
    22,
    42,
    45,
    5
   ],
   "m_button_name": "TODO LIST",
   "in_m_current_wrap_width": 512,
   "in_m_enable_wrapping": 0,
   "out_m_current_wrap_width": 512,
   "out_m_enable_wrapping": 0
  },
  {
   "m_language": "Windows BAT",
   "m_text_in": "@echo off\nrem build script for the project\nrem [button: Debug]\nset LANG=zh_CN.utf8\njc --readable_c_code -awin64 qpad.jc --run\n",
   "m_text_out": "creating FBO: 1920 1017\r\n",
   "m_cell_id": 1,
   "m_completion_time": [
    2016,
    9,
    17,
    21,
    21,
    1,
    2
   ],
   "m_has_any_error": 0,
   "m_current_path": "c:/tp/qpad",
   "m_button_name": "Debug",
   "m_unknown_progress": 0.9037248866448545,
   "m_t_unknown_progress": 5245554133,
   "in_m_current_wrap_width": 512,
   "in_m_enable_wrapping": 0,
   "out_m_current_wrap_width": 512,
   "out_m_enable_wrapping": 0,
   "m_in_budget_ratio": 0.47516734660492926
  },
  {
   "m_language": "Windows BAT",
   "m_text_in": "@echo off\nrem build script for 'qpad.jc'\nrem [button: Release]\ncd /d c:/tp/qpad\njc -brelease -awin64 qpad.jc\njc -brelease -awin32 qpad.jc\nrem jc -brelease -amac qpad.jc\ncd bin\\win32_release\ndel qpad3beta_32.7z\n7z a qpad3beta_32.7z qpad.exe\ncd /d c:\\tp\\qpad\ncd bin\\win64_release\ndel qpad3beta_64.7z\n7z a qpad3beta_64.7z qpad.exe\ndel c:\\software\\cmder\\bin\\qpad_old.exe\nren c:\\software\\cmder\\bin\\qpad.exe qpad_old.exe\ncopy qpad.exe c:\\software\\cmder\\bin\\qpad.exe\n",
   "m_text_out": "s7res.c\r\n   Creating library ./bin/win64_release/qpad.lib and object ./bin/win64_release/qpad.exp\r\ns7res.c\r\n   Creating library ./bin/win32_release/qpad.lib and object ./bin/win32_release/qpad.exp\r\n\r\n7-Zip [64] 15.14 : Copyright (c) 1999-2015 Igor Pavlov : 2015-12-31\r\n\r\nScanning the drive:\r\n1 file, 4579840 bytes (4473 KiB)\r\n\r\nCreating archive: qpad3beta_32.7z\r\n\r\nItems to compress: 1\r\n\r\n\r\nFiles read from disk: 1\r\nArchive size: 1547663 bytes (1512 KiB)\r\nEverything is Ok\r\n\r\n7-Zip [64] 15.14 : Copyright (c) 1999-2015 Igor Pavlov : 2015-12-31\r\n\r\nScanning the drive:\r\n1 file, 4847616 bytes (4734 KiB)\r\n\r\nCreating archive: qpad3beta_64.7z\r\n\r\nItems to compress: 1\r\n\r\n\r\nFiles read from disk: 1\r\nArchive size: 1631172 bytes (1593 KiB)\r\nEverything is Ok\r\n        1 file(s) copied.\r\n",
   "m_cell_id": 2,
   "m_has_any_error": 0,
   "m_current_path": "c:/tp/qpad",
   "m_completion_time": [
    2016,
    9,
    6,
    22,
    21,
    52,
    5
   ],
   "m_button_name": "Release",
   "m_unknown_progress": 0.5474049147738855,
   "m_t_unknown_progress": 5140280740,
   "in_m_current_wrap_width": 512,
   "in_m_enable_wrapping": 0,
   "out_m_current_wrap_width": 512,
   "out_m_enable_wrapping": 0
  },
  {
   "m_language": "Unix Shell Script",
   "m_text_in": "#!/bin/sh\n#[button: Translate]\n# After this is done, re-run qpad to generate 'translation.json'\ncd /c/tp/qpad/res\ngrep -ERoh text:\\(\\([\\\"][^\\\"]+[\\\"]\\)\\|\\([\\'][^\\']+[\\']\\)\\) * > ../build/translation.txt\ngrep -ERoh UI\\._\\\\\\(\\(\\([\\\"][^\\\"]+[\\\"]\\)\\|\\([\\'][^\\']+[\\']\\)\\)\\\\\\) * >> ../build/translation.txt\ngrep -ERoh UI\\.Format\\\\\\(\\(\\([\\\"][^\\\"]+[\\\"]\\)\\|\\([\\'][^\\']+[\\']\\)\\), * >> ../build/translation.txt\ngrep -ERoh tooltip:\\(\\([\\\"][^\\\"]+[\\\"]\\)\\|\\([\\'][^\\']+[\\']\\)\\) * >> ../build/translation.txt\ngrep -ERoh ,name:\\(\\([\\\"][^\\\"]+[\\\"]\\)\\|\\([\\'][^\\']+[\\']\\)\\) * >> ../build/translation.txt\n",
   "m_text_out": "",
   "m_cell_id": 3,
   "m_has_any_error": 0,
   "m_current_path": "c:/tp/qpad",
   "m_completion_time": [
    2016,
    8,
    13,
    17,
    34,
    56,
    3
   ],
   "m_button_name": "Translate",
   "m_unknown_progress": 0.2270804463794893,
   "m_t_unknown_progress": 10629925925,
   "in_m_current_wrap_width": 512,
   "in_m_enable_wrapping": 0,
   "out_m_current_wrap_width": 512,
   "out_m_enable_wrapping": 0
  },
  {
   "m_language": "Markdown",
   "m_text_in": "Search result",
   "m_text_out": "c:/tp/qpad/res/lib/subwin.js:148..175: RICHTEXT_COMMAND_SET_STYLE=\n",
   "m_has_any_error": 1,
   "m_cell_id": 4,
   "m_button_name": "â€¢ Search result",
   "in_m_current_wrap_width": 512,
   "in_m_enable_wrapping": 0,
   "out_m_current_wrap_width": 512,
   "out_m_enable_wrapping": 0
  }
 ],
 "m_last_focus_cell_id": 0
}