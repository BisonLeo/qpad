import "system.jc"
import System.Algorithm.*
import System.Math.*
import System.Console.*

PIPE_READ_BATCH=65536
class CCallbackHolder
	function(__pointer) data_cb
	function(__pointer) close_cb
SetPipeDataCallback=function(pipe0,fcallback0,fcallback_close0){
	CreatePipeWaiterThread=__c_function(int,"CreatePipeWaiterThread","pipe_waiter.h","c_files","pipe_waiter.c")
	pipe=pipe0
	fcallback=fcallback0
	fcallback_close=fcallback_close0
	if Platform.IS_WINDOWS:
		handle=pipe.hf
		if !handle:return
	else
		if pipe.hf<0:return
		handle=__pointer(iptr(pipe.hf))
	ref_holder=CCallbackHolder.NULL
	data_cb=function(__pointer first_byte){
		auto s=[char(iptr(first_byte))]
		if !pipe.WouldBlock():
			s.push(pipe.Read(PIPE_READ_BATCH))
		fcallback(s);
	}
	close_cb=function(__pointer unused_param){
		fcallback_close();
		pipe.Close()
		pipe=typeof(pipe).NULL
		fcallback=__zero(typeof(fcallback))
		fcallback_close=__zero(typeof(fcallback_close))
		//this should break the reference loop...
		__explicit_rc(ref_holder,-1)
		ref_holder=CCallbackHolder.NULL
	}
	ref_holder=new CCallbackHolder(){data_cb:data_cb,close_cb:close_cb}
	__explicit_rc(ref_holder,1)
	CreatePipeWaiterThread(handle,
		data_cb.ptr_fn,data_cb.ptr_this,
		close_cb.ptr_fn,close_cb.ptr_this);
}
