import "text-box.jc"
import "code-editor.jc"
import "txtx-editor.jc"
import "zip-doc.jc"
import "ooc-mipmap.jc"
import "uisandbox.jc"
import Gui2D.*
import Javascript.*
import System.Console.*
import System.Algorithm.*
import Uisandbox.*

__generate_json("js_units","gui2d/ui.js")
__generate_json("js_units","gui2d/gl.js")
__generate_json("js_units","gui2d/widgets.js")
__generate_json("js_units","gui2d/dockbar.js")

(function(){
	Gui2D.ProvideGLFunctions()
	JS=new JSContext
	sbox=setupModuleSystem(JS,1)
	sbox.UILoadZip(string.NULL)
	/////////////
	jsio=JS.New()
	JS.GetGlobal()["IO"]=jsio
	jsio["ReadAll"]=function(JSContext JS){
		fn=JS.Param(0).or(new string)
		ret=System.IO.ReadAll(fn)
		if !ret:
			return 0
		else
			//return JS.Return(new(ret))
			return JS.Return(ret)
	}
	jsio["UIReadAll"]=function(JSContext JS){
		fn=JS.Param(0).or(new string)
		ret=sbox.UIReadAll(fn)
		if !ret:
			return 0
		else
			return JS.Return(ret)
	}
	jsio["CreateFile"]=function(JSContext JS){
		fn=JS.Param(0).or(new string)
		data=JS.Param(1).or(new string)
		f=System.IO.CreateFile(fn)
		if f:
			lg=f.Write(data)
			f.Close()
			return JS.Return(lg)
		else
			return 0
	}
	/////////////
	dname_base=0
	jsio["GetNewDocumentName"]=function(JSContext JS){
		fn_base=JS.Param(0).as(string)
		s_ext=JS.Param(1).as(string)
		s_path_hint=JS.Param(2).or("document")
		if !fn_base||!s_ext:
			return 0
		//todo: per-platform s_path_hint translation
		if Platform.IS_WINDOWS:
			s_userdir=System.Env.ExpandEnvironmentStrings(string("%USERPROFILE%"))
			if !s_userdir.n||s_userdir[0]=='%':
				s_userdir=System.Env.ExpandEnvironmentStrings(string("%SystemDrive%%HOMEPATH%"))
			if s_path_hint=="pictures":
				s_userdir.push("\\Pictures")
			else
				s_userdir.push("\\Documents")
			if !System.IO.DirExists(s_userdir):
				//no "My Pictures"
				s_userdir=new(".")
			else
				s_userdir=s_userdir.Replace(["\\","/"])
		else
			//todo
			assert(0)
		fn_base=s_userdir+"/"+fn_base
		for(;;)
			fn=FormatAsText(fn_base,formatNumber(dname_base,{base:16,align:4}),".",s_ext)
			dname_base++
			if System.IO.FileExists(fn):continue
			return JS.Return(fn)
	}
	/////////////
	if Platform.IS_WINDOWS:
		osal_DoFileDialogWin=__c_function(int,"osal_DoFileDialogWin","filedlg.h","c_files","filedlg.c")
		jsio["DoFileDialog"]=function(JSContext JS){
			//DoFileDialog(["Txtx documents (*.txtx)","*.txtx","All Files","*.*"],"txtx",0)
			filter_strs=JS.Param(0).as(JSObject)
			if !filter_strs:return 0
			n=filter_strs.length()
			if n&1||n<2:return 0
			s_def_ext=new(JS.Param(1).or(""))
			s_def_ext.push(char(0))
			s_filter=new string
			for i=0:2:n-2
				s_filter.push(filter_strs[i].or(""))
				s_filter.push(char(0))
				s_filter.push(filter_strs[i+1].or(""))
				s_filter.push(char(0))
			s_filter.push(char(0))
			ws_filter=Utf8ToUnicode(s_filter)
			ws_def_ext=Utf8ToUnicode(s_def_ext)
			is_save=JS.Param(2).or(0)
			///////////
			s_userdir=System.Env.ExpandEnvironmentStrings(string("%USERPROFILE%"))
			if !s_userdir.n||s_userdir[0]=='%':
				s_userdir=System.Env.ExpandEnvironmentStrings(string("%SystemDrive%%HOMEPATH%"))
			s_userdir.push("\\Documents")
			if !System.IO.DirExists(s_userdir):
				s_userdir=new(".")
			s_userdir.push('\\*')
			ws_userdir=Utf8ToUnicode(s_userdir)
			if ws_userdir.n<260:ws_userdir.resize(260)
			if !osal_DoFileDialogWin(ws_userdir,ws_filter,ws_def_ext,is_save):
				return 0
			s_ret=UnicodeToUtf8(ws_userdir)
			p=s_ret.IndexOf(char(0))
			if p>=0:s_ret.resize(p)
			return JS.Return(s_ret)
		}
	else
		//todo
	/////////////
	Duktape=JS.GetGlobal()["Duktape"]
	Duktape["__utf8_fromCharCode"]=function(JSContext JS){
		return JS.Return(System.Algorithm.Unicode32ToUtf8([JS.Param(0).or(0)]))
	}
	/////////////
	sbox.UIRunJS(JS,"res/main.js")
})()
